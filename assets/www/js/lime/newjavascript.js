'function setJsVar(){ if (typeof LSvar!=&quot;undefined&quot; &amp;&amp; LSvar instanceof Object == false) { bFixNumAuto=1; bNumRealValue=0; LEMradix=&quot;.&quot;; } else { bFixNumAuto=LSvar.bFixNumAuto; bNumRealValue=LSvar.bNumRealValue; LEMradix=LSvar.sLEMradix; } numRegex = new RegExp(&#39;[^-&#39; + LEMradix + &#39;0-9]&#39;,&#39;g&#39;); intRegex = new RegExp(&#39;[^-0-9]&#39;,&#39;g&#39;);}function checkconditions(value, name, type, evt_type){ if (typeof evt_type === &#39;undefined&#39;) { evt_type = &#39;onchange&#39;; } if (type == &#39;radio&#39; || type == &#39;select-one&#39;) { $(&#39;#java&#39;+name).val(value); } else if (type == &#39;checkbox&#39;) { if ($(&#39;#answer&#39;+name).is(&#39;:checked&#39;)) { $(&#39;#java&#39;+name).val(&#39;Y&#39;); } else { $(&#39;#java&#39;+name).val(&#39;&#39;); } } else if (type == &#39;text&#39;) { $(&#39;#java&#39;+name).val(value); } if($.isFunction(ExprMgr_process_relevance_and_tailoring )) ExprMgr_process_relevance_and_tailoring(evt_type,name,type); else console.log(&#39;there is no function&#39;); }function fixnum_checkconditions(value, name, type, evt_type, intonly){ newval = new String(value); if(!bNumRealValue) { if (typeof intonly !==&#39;undefined&#39; &amp;&amp; intonly==1) { newval = newval.replace(intRegex,&#39;&#39;); } else { newval = newval.replace(numRegex,&#39;&#39;); } aNewval = newval.split(LEMradix); if(aNewval.length&gt;0){ newval=aNewval[0]; } if(aNewval.length&gt;1){ newval=newval+&quot;.&quot;+aNewval[1]; } if (newval != &#39;-&#39; &amp;&amp; newval != &#39;.&#39; &amp;&amp; newval != &#39;-.&#39; &amp;&amp; newval != parseFloat(newval)) { newval = &#39;&#39;; } } if(bFixNumAuto) { displayVal = newval; if (LEMradix === &#39;,&#39;) { displayVal = displayVal.split(&#39;.&#39;).join(&#39;,&#39;); } if (name.match(/other$/)) { $(&#39;#answer&#39;+name+&#39;text&#39;).val(displayVal); } $(&#39;#answer&#39;+name).val(displayVal); } if (typeof evt_type === &#39;undefined&#39;) { evt_type = &#39;onchange&#39;; } checkconditions(newval, name, type, evt_type);}function manageIndex(){ $(&quot;#index .jshide&quot;).hide(); $(&quot;#index&quot;).on(&#39;click&#39;,&#39;li,.row&#39;,function(e){ if(!$(e.target).is(&#39;button&#39;)){ $(this).children(&quot;[name=&#39;move&#39;]&quot;).click(); } }); $(function() { $(&quot;.outerframe&quot;).addClass(&quot;withindex&quot;); var idx = $(&quot;#index&quot;); var row = $(&quot;#index .row.current&quot;); if(row.length) idx.scrollTop(row.position().top - idx.height() / 2 - row.height() / 2); });}function addClassEmpty(){	$(&#39;input.text[value=&quot;&quot;]&#39;).addClass(&#39;empty&#39;);	$(&#39;input[type=text][value=&quot;&quot;]&#39;).addClass(&#39;empty&#39;);	$(&#39;textarea&#39;).each(function(index) {	if ($(this).val() == &quot;&quot;){		$(this).addClass(&#39;empty&#39;);	}	});	$(&quot;body&quot;).delegate(&quot;input[type=text],textarea&quot;,&quot;blur focusout&quot;,function(){	if ($(this).val() == &quot;&quot;){		$(this).addClass(&#39;empty&#39;);	}else{		$(this).removeClass(&#39;empty&#39;);	}	});}Array.prototype.push = function(){	var n = this.length &gt;&gt;&gt; 0;	for (var i = 0; i &lt; arguments.length; i++)	{		this[n] = arguments[i];		n = n + 1 &gt;&gt;&gt; 0;	}	this.length = n;	return n;};Array.prototype.pop = function() {	var n = this.length &gt;&gt;&gt; 0, value;	if (n) {		value = this[--n];		delete this[n];	}	this.length = n;	return value;};function inArray(needle, haystack){	for (h in haystack)	{		if (haystack[h] == needle)		{			return true;		}	}	return false;}function match_regex(testedstring,str_regexp){		if (str_regexp == &#39;&#39; || testedstring == &#39;&#39;) return false;	pattern = new RegExp(str_regexp);	return pattern.test(testedstring)}function addHiddenField(theform,thename,thevalue){	var myel = document.createElement(&#39;input&#39;);	myel.type = &#39;hidden&#39;;	myel.name = thename;	theform.appendChild(myel);	myel.value = thevalue;}function cancelBubbleThis(eventObject){	if (!eventObject) var eventObject = window.event;	eventObject.cancelBubble = true;	if (eventObject &amp;&amp; eventObject.stopPropagation) {		eventObject.stopPropagation();	}}function cancelEvent(e){ e = e ? e : window.event; if(e.stopPropagation) e.stopPropagation(); if(e.preventDefault) e.preventDefault(); e.cancelBubble = true; e.cancel = true; e.returnValue = false; return false;}function hookEvent(element, eventName, callback){ if(typeof(element) == &quot;string&quot;) element = document.getElementById(element); if(element == null) return; if(element.addEventListener) { element.addEventListener(eventName, callback, false); } else if(element.attachEvent) element.attachEvent(&quot;on&quot; + eventName, callback);}function noScroll(e){ e = e ? e : window.event; cancelEvent(e);}function getkey(e){ if (window.event) return window.event.keyCode; else if (e) return e.which; else return null;}function goodchars(e, goods){ return false;}function show_hide_group(group_id){	var questionCount;	$(&quot;#group-&quot; + group_id).show();questionCount=$(&quot;div#group-&quot; + group_id).find(&quot;div[id^=&#39;question&#39;]:visible&quot;).size();		if( questionCount == 0 )		{			$(&quot;#group-&quot; + group_id).hide();		}}function round (value, precision, mode) { var m, f, isHalf, sgn; precision |= 0; m = Math.pow(10, precision); value *= m; sgn = (value &gt; 0) | -(value &lt; 0); isHalf = value % 1 === 0.5 * sgn; f = Math.floor(value); if (isHalf) { switch (mode) { case &#39;PHP_ROUND_HALF_DOWN&#39;: value = f + (sgn &lt; 0); break; case &#39;PHP_ROUND_HALF_EVEN&#39;: value = f + (f % 2 * sgn); break; case &#39;PHP_ROUND_HALF_ODD&#39;: value = f + !(f % 2); break; default: value = f + (sgn &gt; 0); } } return (isHalf ? value : Math.round(value)) / m;}function maxlengthtextarea(){ $(&quot;textarea[maxlength]&quot;).change(function(){ var maxlen=$(this).attr(&quot;maxlength&quot;); if ($(this).val().length &gt; maxlen) { $(this).val($(this).val().substring(0, maxlen)); } }); $(&quot;textarea[maxlength]&quot;).keyup(function(){ var maxlen=$(this).attr(&quot;maxlength&quot;); if ($(this).val().length &gt; maxlen) { $(this).val($(this).val().substring(0, maxlen)); } }); $(&quot;textarea[maxlength]&quot;).keydown(function(event){ var maxlen=$(this).attr(&quot;maxlength&quot;); var k =event.keyCode; if (($(this).val().length &gt;= maxlen) &amp;&amp; !(k == null ||k==0||k==8||k==9||k==13||k==27||k==37||k==38||k==39||k==40||k==46)) {  return false; } });}';